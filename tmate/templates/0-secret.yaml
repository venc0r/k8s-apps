# store the secret-name as var
# in my case, the name was very long and containing a lot of fields
# so it helps me a lot
{{- $secret_name := printf "%s" (include "tmate.fullname" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "tmate.fullname" . }}
  labels:
    {{- include "tmate.labels" . | nindent 4 }}
data:
  # try to get the old secret
  # keep in mind, that a dry-run only returns an empty map 
  {{- $old_sec := lookup "v1" "Secret" .Release.Namespace $secret_name }}
  # check, if a secret is already set
  {{- if or (not $old_sec) (not $old_sec.data) }}
  # if not set, then generate a new password
  secret_key_base: {{ default ( randAlphaNum 64 ) .Values.secret.secret_key_base | b64enc }}
  wsapi_key: {{ default ( randAlphaNum 24 ) .Values.secret.wsapi_key | b64enc }}
  erl_cookie: {{ default ( randAlphaNum 64 ) .Values.secret.erl_cookie | b64enc }}
  hmac_key: {{ default ( randAlphaNum 24 ) .Values.secret.hmac_key | b64enc }}
  
  {{ else }}
  # if set, then use the old value
  secret_key_base: {{ index $old_sec.data "secret_key_base" }}
  wsapi_key: {{ index $old_sec.data "wsapi_key" }}
  erl_cookie: {{ index $old_sec.data "erl_cookie" }}
  hmac_key: {{ index $old_sec.data "hmac_key" }}

  {{ end }}
